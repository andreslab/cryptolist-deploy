{"version":3,"sources":["src/components/List/Card.js","src/utils/constants.js","src/components/List/List.js","src/api/Coin.js","src/components/Auth/UserGreeting.js","src/context/authContext.js","src/hooks/useAuth.js","src/db/Coin.js","src/components/List/Filter.js","src/screens/Home.js","src/utils/userDB.js","src/components/Auth/LoginForm.js","src/screens/Login.js","src/components/Chart.js","src/screens/Detail.js","src/navigation/Navigation.js","App.js"],"names":["Card","props","coin","navigation","useNavigation","colorChange24h","percent_change_24h","includes","TouchableWithoutFeedback","onPress","navigate","id","View","style","styles","card","spacing","Text","rank","capitalize","symbol","price","price_usd","fontSize","position","top","right","color","StyleSheet","create","flex","height","padding","margin","backgroundColor","borderRadius","left","marginLeft","List","coins","FlatList","data","showsVerticalScrollIndicator","keyExtractor","renderItem","item","contentContainerStyle","flatListContentContainer","marginTop","getCoinsApi","a","async","API_HOST","fetch","response","json","result","getCoinDetailByIdApi","console","log","url","UserGreeting","name","greeting","AuthContext","createContext","auth","undefined","login","logout","setTotalCoins","coinsTotal","coinsFilter","updateCoinList","AuthProvider","children","useState","setAuth","setCoinsFilter","setCoinsTotal","valueContext","userData","filter","filterCoins","forEach","push","Provider","value","useContext","getCoinsStorage","AsyncStorageLib","getItem","JSON","parse","addCoinsStorage","setItem","stringify","Filter","useAuth","setFilter","filterShowed","setFilterShowed","flexDirection","marginRight","TextInput","inlineImageLeft","placeholder","autoCapitalize","onChangeText","Button","title","btn","borderWidth","Home","coinsShowed","setCoinsShowed","useEffect","loadCoins","length","collectionCoins","nameid","percent_change_1h","percent_change_7d","price_btc","market_cap_usd","volume24","volume24a","csupply","tsupply","msupply","addCoinsLocal","HandleTrySomethingFailure","error","SafeAreaView","firstName","ActivityIndicator","width","size","user","username","lastName","email","userDataAnonymous","LoginForm","setError","formik","useFormik","initialValues","validateOnChange","validationSchema","Yup","required","onSubmit","content","label","input","values","setFieldValue","button","handleSubmit","errors","skip","textAlign","fontWeight","marginHorizontal","bottom","Login","CoinChart","calculeValue","date","Date","xAxisData","getDate","axesSvg","fill","verticalContentInset","marginBottom","contentInset","svg","stroke","formatLabel","index","day","getMonth","formatDate","percent","total","Detail","params","route","setCoin","loadCoinDetail","setInterval","callApi","ScrollView","change","paddingLeft","Stack","createNativeStackNavigator","Navigation","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","tabBarLabel","headerRight","goBack","headerLeft","bar","App","NavigationContainer"],"mappings":"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","file":"static/js/app.50d99688.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, TouchableWithoutFeedback } from 'react-native';\nimport { capitalize } from 'lodash';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { COLOR_MAIN } from '../../utils/constants';\n\n\nexport default function Card(props) {\n    const { coin } = props;\n    const navigation = useNavigation();\n\n    const goToDetail = () => {\n        navigation.navigate(\"Detail\", { id: coin.id });\n    };\n\n    const change24h = coin.percent_change_24h;\n    const colorChange24h = change24h.includes(\"-\") ? \"#f50057\" : \"#1de9b6\";\n\n    return (\n        <TouchableWithoutFeedback onPress={goToDetail}>\n            <View style={styles.card}>\n                <View style={styles.spacing}>\n                    <View>\n                        <Text style={styles.rank}>{capitalize(coin.rank)}</Text>\n                        <Text style={styles.symbol}>{capitalize(coin.symbol)}</Text>\n                        <Text style={styles.price}>{capitalize(coin.price_usd)}</Text>\n                        <Text style={{\n                            fontSize: 20,\n                            position: \"absolute\",\n                            top: 8,\n                            right: 10,\n                            color: colorChange24h,\n                        }}\n                        >\n                            {capitalize(coin.percent_change_24h)} %</Text>\n                    </View>\n                </View>\n            </View>\n        </TouchableWithoutFeedback >\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    card: {\n        flex: 1,\n        height: 100,\n    },\n    spacing: {\n        flex: 1,\n        padding: 5,\n        margin: 5,\n        backgroundColor: COLOR_MAIN,\n        borderRadius: 20,\n    },\n    rank: {\n        position: \"absolute\",\n        top: 8,\n        left: 10,\n        color: \"#fff\",\n        fontSize: 20,\n    },\n    symbol: {\n        fontSize: 28,\n        marginLeft: 50,\n        color: \"#fff\",\n    },\n    price: {\n        fontSize: 16,\n        marginLeft: 50,\n        color: \"#fff\",\n    },\n});","export const API_HOST = \"https://api.coinlore.net\";\n\nexport const COIN_STORAGE = \"coins\";\n\nexport const COLOR_MAIN = \"#78909c\"","import React from 'react'\nimport { StyleSheet, FlatList, View } from 'react-native'\nimport Card from './Card';\n\nexport default function List(props) {\n\n    const { coins } = props;\n\n    return (\n        <FlatList\n            data={coins}\n            showsVerticalScrollIndicator={false}\n            keyExtractor={(coin) => coin.id}\n            renderItem={({ item }) => <Card coin={item} />}\n            contentContainerStyle={styles.flatListContentContainer}\n        />\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    flatListContentContainer: {\n        marginTop: 30,\n        backgroundColor: \"#23000\"\n    }\n});","import { API_HOST } from \"../utils/constants\";\n\nexport async function getCoinsApi() {\n    try {\n        const url = `${API_HOST}/api/tickers/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getCoinDetailByIdApi(id) {\n    console.log(`id: ${id}`);\n    try {\n        const url = `${API_HOST}/api/ticker/`;\n        const response = await fetch(`${url}?id=${id}`);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nexport default function UserGreeting(props) {\n\n    const { name } = props;\n\n    return (\n        <Text style={styles.greeting}>Welcome {name}</Text>\n    )\n}\n\nconst styles = StyleSheet.create({\n    greeting: {\n        marginLeft: 12,\n        marginTop: 12,\n        fontSize: 20\n    }\n});\n","import React, { useState, createContext } from 'react';\n\nexport const AuthContext = createContext({\n    auth: undefined,\n    login: () => { },\n    logout: () => { },\n    setTotalCoins: () => { },\n    coinsTotal: [],\n    coinsFilter: [],\n    updateCoinList: () => { },\n});\n\nexport function AuthProvider(props) {\n    const { children } = props;\n    const [auth, setAuth] = useState(undefined);\n    const [coinsFilter, setCoinsFilter] = useState([]);\n    const [coinsTotal, setCoinsTotal] = useState([]);\n\n    const login = (userData) => {\n        setAuth(userData);\n    }\n\n    const logout = () => {\n        setAuth(undefined);\n    }\n\n    const setTotalCoins = (coins) => {\n        setCoinsTotal(coins);\n    }\n\n    const updateCoinList = (filter) => {\n        var filterCoins = [];\n        setCoinsFilter([]);\n        coinsTotal.forEach(coin => {\n            if (coin.percent_change_24h >= filter) {\n                filterCoins.push(coin);\n            }\n        });\n        setCoinsFilter(filterCoins);\n    }\n\n    const valueContext = {\n        auth,\n        login,\n        logout,\n        setTotalCoins,\n        coinsTotal,\n        coinsFilter,\n        updateCoinList\n    };\n\n    return (\n        <AuthContext.Provider value={valueContext}>{children}</AuthContext.Provider>\n    );\n\n}","import { useContext } from 'react';\nimport { AuthContext } from \"../context/authContext\";\n\nexport default () => useContext(AuthContext);","import AsyncStorageLib from \"@react-native-async-storage/async-storage\";\nimport { includes, pull } from 'lodash';\nimport { COIN_STORAGE } from \"../utils/constants\";\n\nexport async function getCoinsStorage() {\n    try {\n        const response = await AsyncStorageLib.getItem(COIN_STORAGE);\n        return JSON.parse(response || []);\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function addCoinsStorage(coins) {\n    try {\n        await AsyncStorageLib.setItem(COIN_STORAGE, JSON.stringify(coins));\n    } catch (error) {\n        throw error;\n    }\n}","import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, Text } from 'react-native';\nimport useAuth from \"../../hooks/useAuth\";\nimport { COLOR_MAIN } from '../../utils/constants';\n\nexport default function Filter() {\n\n    const { updateCoinList } = useAuth();\n    const [filter, setFilter] = useState(\"\");\n    const [filterShowed, setFilterShowed] = useState(\"\");\n\n    return (\n        <View >\n            <Text style={{\n                marginTop: 30,\n                marginLeft: 12,\n            }}>Filter:</Text>\n            <View style={{\n                marginTop: 5,\n                flexDirection: 'row',\n                marginLeft: 12,\n                marginRight: 12\n            }}>\n                <TextInput\n                    style={styles.filter}\n                    inlineImageLeft='search_icon'\n                    placeholder='Minimum 24-hr % Change'\n                    autoCapitalize='none'\n                    value={filter}\n                    onChangeText={setFilter} />\n                <Button\n                    title=\"Filter\"\n                    style={styles.btn}\n                    color={COLOR_MAIN}\n                    onPress={(() => {\n                        updateCoinList(filter);\n                        setFilterShowed(filter);\n                        setFilter(\"\");\n                    })}\n                />\n            </View>\n            <Text style={{\n                marginTop: 5,\n                fontSize: 15,\n                marginLeft: 12,\n            }} >{filterShowed}</Text>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    btn: {\n        flex: 0.5,\n        color: COLOR_MAIN\n    },\n    filter: {\n        flex: 1,\n        borderWidth: 1,\n        padding: 10,\n    }\n});\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, SafeAreaView, ActivityIndicator } from 'react-native'\nimport List from '../components/List/List';\nimport { getCoinsApi } from '../api/Coin'\nimport UserGreeting from \"../components/Auth/UserGreeting\";\nimport useAuth from \"../hooks/useAuth\";\nimport { addCoinsStorage, getCoinsStorage } from '../db/Coin';\nimport Filter from '../components/List/Filter';\n\n\nexport default function Home() {\n\n    const { auth, coinsFilter, setTotalCoins } = useAuth();\n    const [coinsShowed, setCoinsShowed] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            await loadCoins();\n        })();\n    }, [coinsFilter]); //dentro de [] va algun parametro que indica, si se modifica ese valor se vuelva a ejecutar toda la funcion del useEffect\n\n\n\n    const loadCoins = async () => {\n        if (coinsFilter.length > 0) {\n            console.log(`coin filte: ${coinsFilter[0].price_usd}`);\n            setCoinsShowed(coinsFilter);\n            return;\n        }\n        try {\n            const response = await getCoinsApi();\n            const collectionCoins = [];\n            for await (const coin of response.data) {\n                if (coin.rank > 50) { break; }\n                collectionCoins.push({\n                    id: coin.id,\n                    symbol: coin.symbol,\n                    name: coin.name,\n                    nameid: coin.nameid,\n                    rank: coin.rank,\n                    price_usd: coin.price_usd,\n                    percent_change_24h: coin.percent_change_24h,\n                    percent_change_1h: coin.percent_change_1h,\n                    percent_change_7d: coin.percent_change_7d,\n                    price_btc: coin.price_btc,\n                    market_cap_usd: coin.market_cap_usd,\n                    volume24: coin.volume24,\n                    volume24a: coin.volume24a,\n                    csupply: coin.csupply,\n                    tsupply: coin.tsupply,\n                    msupply: coin.msupply\n                });\n            }\n            setTotalCoins(collectionCoins);\n            setCoinsShowed(collectionCoins);\n            //setCoins([...coins, ...collectionCoins]);\n            addCoinsLocal(collectionCoins);\n        } catch (error) {\n            console.log(\"local:\");\n            HandleTrySomethingFailure();\n            console.error(error);\n        }\n    };\n\n    return (\n        <SafeAreaView>\n            <View>{auth ? <UserGreeting name={auth.firstName} /> : <Text>Welcome</Text>}</View>\n            <Filter />\n            <ActivityIndicator style={{\n                width: '100%',\n                top: '200px',\n                position: \"absolute\"\n            }} size=\"large\" />\n            <View style={{\n                backgroundColor: \"#eceff1\"\n            }}>\n                <List\n                    coins={coinsShowed}\n                />\n            </View>\n        </SafeAreaView>\n    );\n\n    async function addCoinsLocal(coins) {\n        await addCoinsStorage(coins)\n    }\n\n    async function getCoinsLocal() {\n        return await getCoinsStorage()\n    }\n\n    async function HandleTrySomethingFailure() {\n        try {\n            const collectionCoins = await getCoinsLocal();\n            setTotalCoins(collectionCoins);\n            setCoinsShowed(collectionCoins);\n        } catch (IndexOutOfRangeException) {\n            console.error(error);\n        }\n    }\n}","export const user = {\n    username: \"andres\",\n    pass: \"12345\"\n}\n\nexport const userData = {\n    username: \"andreslab\",\n    firstName: \"Andres\",\n    lastName: \"Andrade\",\n    email: \"andres@hotmail.com\"\n}\n\nexport const userDataAnonymous = {\n    username: \"demo\",\n    firstName: \"Anonymous\",\n    lastName: \"Anonymous\",\n    email: \"Anonymous@hotmail.com\"\n}","import React, { useState } from 'react'\nimport { View, Text, SafeAreaView, StyleSheet, TextInput, Button, Keyboard } from 'react-native'\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { user, userData, userDataAnonymous } from '../../utils/userDB';\nimport useAuth from '../../hooks/useAuth';\nimport { COLOR_MAIN } from '../../utils/constants';\n\n\nexport default function LoginForm() {\n    const [error, setError] = useState(\"\");\n    const navigation = useNavigation();\n    const { login } = useAuth();\n\n    const formik = useFormik({\n        initialValues: initialValues(),\n        validateOnChange: false,\n        validationSchema: Yup.object(validationSchema()),\n        onSubmit: (data) => {\n            setError(\"\");\n            const { username } = data;\n\n            if (username !== user.username) {\n                setError(\"Username invalid\");\n            } else {\n                login(userData);\n                navigation.navigate(\"Home\");\n            }\n        }\n    });\n\n    return (\n        <View style={styles.content}>\n            < Text style={styles.label} > User</Text >\n            <TextInput\n                style={styles.input}\n                placeholder='Username'\n                autoCapitalize='none'\n                value={formik.values.username}\n                onChangeText={(user) => formik.setFieldValue('username', user)} />\n            <Button\n                title=\"Log In\"\n                style={styles.button}\n                color={COLOR_MAIN}\n                onPress={formik.handleSubmit}\n            />\n            <Text style={styles.error}>{formik.errors.username || error}</Text>\n\n            <Button\n                title=\"Skip\"\n                style={styles.skip}\n                color={COLOR_MAIN}\n                onPress={() => {\n                    login(userDataAnonymous);\n                    navigation.navigate(\"Home\");\n                }}\n            />\n            <Text style={{\n                color: \"#b0bec5\",\n                fontSize: 20,\n                textAlign: \"center\",\n                marginTop: 20\n            }}>Help: username = andres or just click in skip button</Text>\n        </View >\n    )\n}\n\nfunction goToHome(auth) {\n    navigation.navigate(\"Home\", { auth: auth });\n}\n\nfunction initialValues() {\n    return {\n        username: \"\",\n    }\n}\n\nfunction validationSchema() {\n    return {\n        username: Yup.string().required(\"User required\"),\n    }\n}\n\nconst styles = StyleSheet.create({\n    content: {\n        marginTop: 12\n    },\n    title: {\n        textAlign: \"center\",\n        fontSize: 28,\n        fontWeight: \"bold\",\n        marginTop: 50,\n    },\n    label: {\n        textAlign: \"left\",\n        fontSize: 15,\n        marginLeft: 12,\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 10,\n    },\n    button: {\n        marginHorizontal: 12,\n        color: COLOR_MAIN\n    },\n    skip: {\n        position: \"absolute\",\n        bottom: 50,\n        color: COLOR_MAIN\n    },\n    error: {\n        textAlign: \"center\",\n        color: \"#f00\",\n        marginTop: 20,\n    }\n});","import React from 'react'\nimport { SafeAreaView } from 'react-native'\nimport LoginForm from '../components/Auth/LoginForm'\n\nexport default function Login() {\n    return (\n        <SafeAreaView>\n            <LoginForm />\n        </SafeAreaView>\n    )\n}\n","import React from 'react';\nimport { LineChart, XAxis, YAxis, Grid, Decorator } from 'react-native-svg-charts';\nimport { View } from 'react-native'\n\nexport default function CoinChart(props) {\n    const { coin } = props;\n\n    const percent_change_24h = coin.percent_change_24h\n    const percent_change_1h = coin.percent_change_1h\n    const percent_change_7d = coin.percent_change_7d\n    const price_usd = coin.price_usd\n\n    const data = [\n        calculeValue(percent_change_7d, price_usd),\n        calculeValue(percent_change_24h, price_usd),\n        calculeValue(percent_change_1h, price_usd),\n    ]\n    console.log(data)\n\n    // const data = [50, 10, 40, 95, -4, -24, 85]\n\n    var date = new Date();\n\n    var xAxisData = [\n        date.getDate() - 6,\n        date.getDate() - 1,\n        date.getDate()]\n\n    const axesSvg = { fontSize: 10, fill: 'grey' };\n    const verticalContentInset = { top: 10, bottom: 10 }\n    const xAxisHeight = 30\n\n\n    return (\n        <View style={{ height: 200, padding: 20, flexDirection: 'row' }}>\n            <YAxis\n                data={data}\n                style={{ marginBottom: xAxisHeight }}\n                contentInset={verticalContentInset}\n                svg={axesSvg}\n            />\n            <View style={{ flex: 1, marginLeft: 10 }}>\n                <LineChart\n                    style={{ flex: 1 }}\n                    data={data}\n                    contentInset={verticalContentInset}\n                    svg={{ stroke: 'rgb(134, 65, 244)' }}\n                >\n                    <Grid />\n                </LineChart>\n                <XAxis\n                    style={{ marginHorizontal: -10, height: xAxisHeight }}\n                    data={data}\n                    formatLabel={(value, index) => formatDate(xAxisData[index])}\n                    contentInset={{ left: 10, right: 10 }}\n                    svg={axesSvg}\n                />\n            </View>\n        </View>\n    );\n}\n\nfunction formatDate(day) {\n    var date = new Date();\n    return `${day}/${date.getMonth()}`;\n}\n\nfunction calculeValue(percent, total) {\n    const percentValue = (percent / 100) * total\n    return (total - percentValue)\n}\n","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, SafeAreaView } from 'react-native'\nimport { ScrollView } from 'react-native-web';\nimport { getCoinDetailByIdApi } from '../api/Coin';\nimport { capitalize } from 'lodash';\nimport CoinChart from \"../components/Chart\";\n\n\nexport default function Detail(props) {\n\n    const {\n        route: { params },\n    } = props;\n    const [coin, setCoin] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n            await loadCoinDetail();\n        })();\n    }, [params]);\n\n    const loadCoinDetail = async () => {\n        try {\n            const response = await getCoinDetailByIdApi(params.id);\n            //console.log(`response: ${response[0].rank}`);\n            setCoin(response[0]);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    if (!coin) return null;\n\n    startCountDown()\n\n    return (\n        <ScrollView>\n            <Text style={styles.symbol}>{capitalize(coin.symbol)}</Text>\n            <CoinChart coin={coin} />\n            <Text style={styles.change}>{capitalize(coin.percent_change_1h)}</Text>\n        </ScrollView>\n    )\n\n    function startCountDown() {\n        setInterval(callApi, 30000);\n    }\n\n    async function callApi() {\n        console.log(\"call....\");\n        await loadCoinDetail();\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    symbol: {\n        fontSize: 50,\n        paddingLeft: 12\n    },\n    change: {\n        fontSize: 25,\n        position: \"absolute\",\n        right: 10,\n        top: 10\n    },\n});","import React from 'react'\nimport { StyleSheet, Button } from 'react-native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Home from '../screens/Home';\nimport Login from '../screens/Login';\nimport Detail from '../screens/Detail';\nimport useAuth from \"../hooks/useAuth\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { COLOR_MAIN } from '../utils/constants';\n\nconst Stack = createNativeStackNavigator();\n\n\nexport default function Navigation() {\n    const { logout } = useAuth();\n    const navigation = useNavigation();\n\n    return (\n        <Stack.Navigator screenOptions={{\n            headerStyle: {\n                backgroundColor: COLOR_MAIN,\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n        }}>\n            <Stack.Screen\n                name=\"Log In\"\n                component={Login}\n\n                options={{\n                    tabBarLabel: \"Login\",\n                }} />\n            <Stack.Screen\n                name=\"Home\"\n                component={Home}\n                options={{\n                    tabBarLabel: \"Home\",\n                    headerRight: () => (\n                        <Button\n                            onPress={() => {\n                                logout()\n                                navigation.goBack();\n                            }}\n                            title=\"Log out\"\n                            color={COLOR_MAIN}\n\n                        />\n                    ),\n                    headerLeft: null,\n                    // headerStyle: {\n                    //     backgroundColor: '#f4511e',\n                    // },\n                    // headerTintColor: '#fff',\n                    // headerTitleStyle: {\n                    //     fontWeight: 'bold',\n                    // },\n                }} />\n            < Stack.Screen\n                name=\"Detail\"\n                component={Detail}\n                options={{\n                    tabBarLabel: \"Detail\",\n                }} />\n        </Stack.Navigator >\n    )\n}\n\nconst styles = StyleSheet.create({\n    btn: {\n        color: \"#000\"\n    },\n    bar: {\n        color: COLOR_MAIN\n    }\n});","import React from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navigation from \"./src/navigation/Navigation\";\nimport { AuthProvider } from './src/context/authContext';\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <AuthProvider>\n        <Navigation />\n      </AuthProvider>\n    </NavigationContainer>\n  );\n}\n"],"sourceRoot":""}